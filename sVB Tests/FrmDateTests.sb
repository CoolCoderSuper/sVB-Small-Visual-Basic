D1 = #1/13/2023#
D2 = #10 Jun 2022#
D3 = #15:0:0#
D4 = #6:12:00 AM#
D5 = #1-1-2023 12:20:15 PM#
D6 = #+1.5:15#
D7 = #-5:10:30#


Me.RunTests()



'------------------------------------------------
Function Test_Add()
   Return UnitTest.AssertEqual(
      {
         Date.Add(D1, D2),
         Date.Add(D3, D4),
         Date.Add(D5, D6),
         Date.Add(D6, D7),
         D2.Add(D6),
         D4.Add(D7),
         D7.Add(D5)
      },
      {
         D1 + D2,
         D3 + D4,
         D5 + D6,
         D6 + D7,
         D2 + D6,
         D4 + D7,
         D7 + D5
      },
      "Date.Add"
   )
EndFunction


'------------------------------------------------
Function Test_AddDays()
   
   Return UnitTest.AssertEqual(
      {
         Date.AddDays(D1, 1),
         D2.AddDays(.5),
         Date.AddDays(D3, 10),
         D4.AddDays(1.5),
         Date.AddDays(D5, -20),
         Date.AddDays(D6, 30),
         D7.AddDays(100)
      },
      {
         #1/14/2023#,
         #10 Jun 2022 12:00:00 PM#,
         Date.FromDateTime(
            Clock.Year,
            Clock.Month,
            Clock.Day + 10,
            15, 0, 0, 0
         ),
         Date.FromDateTime(
            Clock.Year,
            Clock.Month,
            Clock.Day + 1,
            18, 12, 0, 0
         ),
         #12-12-2022 12:20:15 PM#,
         #+31.5:15#,
         #+99.18:49:30#
      },
      "Date.AddDays"
   )
EndFunction


'------------------------------------------------
Function Test_AddHours()
   
   Return UnitTest.AssertEqual(
      {
         Date.AddHours(D1, 1),
         D2.AddHours(.5),
         Date.AddHours(D3, 10),
         D4.AddHours(1.5),
         Date.AddHours(D5, -20),
         Date.AddHours(D6, 30),
         D7.AddHours(100)
      },
      {
         #1/13/2023 01:00:00#,
         #10 Jun 2022 12:30:00 AM#,
         Date.FromDateTime(
            Clock.Year,
            Clock.Month,
            Clock.Day + 1,
            1, 0, 0, 0
         ),
         Date.FromDateTime(
            Clock.Year,
            Clock.Month,
            Clock.Day,
            7, 42, 0, 0
         ),
         #12-31-2022 16:20:15#,
         #+2.11:15#,
         #+3.22:49:30#
      },
      "Date.AddHours"
   )
EndFunction



'------------------------------------------------
Function Test_AddMilliseconds()
   
   Return UnitTest.AssertTrue(
      {
         Date.AddMilliseconds(D1, 1) = #1/13/2023 12:00:00.001 AM#,
         D2.AddMilliseconds(0.5) = #10 Jun 2022 12:00:00.001 AM#,
         Date.AddMilliseconds(D3, 10) = Date.FromDateTime(
            Clock.Year,
            Clock.Month,
            Clock.Day,
            15, 0, 0, 10
         ),
         D4.AddMilliseconds(1.5) = Date.FromDateTime(
            Clock.Year,
            Clock.Month,
            Clock.Day,
            6, 12, 00, 1.5
         ),
         Date.AddMilliseconds(D5, -20) = #1-1-2023 12:20:14.980 PM#,
         Date.AddMilliseconds(D6, 30) = #+1.5:15:0.03#,
         D7.AddMilliseconds(100) = #-5:10:29.900#
      },
      "Date.AddMilliseconds"
   )
EndFunction

'------------------------------------------------
Function Test_AddMinutes()
   
   Return UnitTest.AssertEqual(
      {
         Date.AddMinutes(D1, 1),
         D2.AddMinutes(.5),
         Date.AddMinutes(D3, 10),
         D4.AddMinutes(1.5),
         Date.AddMinutes(D5, -20),
         Date.AddMinutes(D6, 30),
         D7.AddMinutes(100)
      },
      {
         #1/13/2023 12:01:00 AM#,
         #10 Jun 2022 12:00:30 AM#,
         Date.FromDateTime(
            Clock.Year,
            Clock.Month,
            Clock.Day,
            15, 10, 0, 0
         ),
         Date.FromDateTime(
            Clock.Year,
            Clock.Month,
            Clock.Day,
            6, 13, 30, 0
         ),
         #1-1-2023 12:00:15 PM#,
         #+1.5:45#,
         #-3:30:30#
      },
      "Date.AddMinutes"
   )
EndFunction


'------------------------------------------------
Function Test_AddMonths()
   
   Return UnitTest.AssertEqual(
      {
         Date.AddMonths(D1, 1),
         D2.AddMonths(0.5),
         Date.AddMonths(D3, 10),
         D4.AddMonths(1.5),
         Date.AddMonths(D5, -20),
         Date.AddMonths(D6, 30),
         D7.AddMonths(100)
      },
      {
         #2/13/2023#,
         #10 Jul 2022#,
         Date.FromDateTime(
            Clock.Year,
            Clock.Month + 10,
            Clock.Day,
            15, 0, 0, 0
         ),
         Date.FromDateTime(
            Clock.Year,
            Clock.Month + 2,
            Clock.Day,
            6, 12, 0, 0
         ),
         #5-1-2021 12:20:15 PM#,
         #+914.8:15#,
         #+3043.12:49:30#
      },
      "Date.AddMonths"
   )
EndFunction

'------------------------------------------------
Function Test_AddSeconds()
   
   Return UnitTest.AssertEqual(
      {
         Date.AddSeconds(D1, 1),
         D2.AddSeconds(.5),
         Date.AddSeconds(D3, 10),
         D4.AddSeconds(1.5),
         Date.AddSeconds(D5, -20),
         Date.AddSeconds(D6, 30),
         D7.AddSeconds(100)
      },
      {
         #1/13/2023 12:00:01 AM#,
         #10 Jun 2022 12:00:00.5 AM#,
         Date.FromDateTime(
            Clock.Year,
            Clock.Month,
            Clock.Day,
            15, 0, 10, 0
         ),
         Date.FromDateTime(
            Clock.Year,
            Clock.Month,
            Clock.Day,
            6, 12, 1, 500
         ),
         #1-1-2023 12:19:55 PM#,
         #+1.5:15:30#,
         #-5:8:50#
      },
      "Date.AddSeconds"
   )
EndFunction


'------------------------------------------------
Function Test_AddYears()
   
   Return UnitTest.AssertEqual(
      {
         Date.AddYears(D1, 1),
         D2.AddYears(0.5),
         Date.AddYears(D3, 10),
         D4.AddYears(1.5),
         Date.AddYears(D5, -20),
         Date.AddYears(D6, 30),
         D7.AddYears(100)
      },
      {
         #1/13/2024#,
         #10 Jun 2023#,
         Date.FromDateTime(
            Clock.Year + 10,
            Clock.Month,
            Clock.Day,
            15, 0, 0, 0
         ),
         Date.FromDateTime(
            Clock.Year + 2,
            Clock.Month,
            Clock.Day,
            6, 12, 0, 0
         ),
         #1-1-2003 12:20:15 PM#,
         #+10958.17:15#,
         #+36524.18:49:30#
      },
      "Date.AddYears"
   )
EndFunction



'------------------------------------------------
Function Test_ChangeDay()
   
   Return UnitTest.AssertEqual(
      {
         Date.ChangeDay(D1, 1),
         D2.ChangeDay(.5),
         Date.ChangeDay(D3, 10),
         D4.ChangeDay(1.5),
         Date.ChangeDay(D5, 40),
         Date.ChangeDay(D6, 30),
         Date.ChangeDay(D6, -30),
         D7.ChangeDay(100),
         D7.ChangeDay(-100)
      },
      {
         #1/1/2023#,
         #1 Jun 2022#,
         Date.FromDateTime(
            Clock.Year,
            Clock.Month,
            10,
            15, 0, 0, 0
         ),
         Date.FromDateTime(
            Clock.Year,
            Clock.Month,
            2,
            6, 12, 0, 0
         ),
         #1-1-2023 12:20:15 PM#,
         #+30.5:15#,
         #+30.5:15#,
         #-100.5:10:30#,
         #-100.5:10:30#
      },
      "Date.ChangeDay"
   )
EndFunction


'------------------------------------------------
Function Test_ChangeHour()
   
   Return UnitTest.AssertEqual(
      {
         Date.ChangeHour(D1, 1),
         D2.ChangeHour(.5),
         Date.ChangeHour(D3, 10),
         D4.ChangeHour(1.5),
         Date.ChangeHour(D5, 23),
         Date.ChangeHour(D6, 30),
         Date.ChangeHour(D6, -5.5),
         D7.ChangeHour(13),
         D7.ChangeHour(-13)
      },
      {
         #1/13/2023 01:00:00#,
         #10 Jun 2022 1:00:00 AM#,
         Date.FromDateTime(
            Clock.Year,
            Clock.Month,
            Clock.Day,
            10, 0, 0, 0
         ),
         Date.FromDateTime(
            Clock.Year,
            Clock.Month,
            Clock.Day,
            2, 12, 0, 0
         ),
         #1-1-2023 23:20:15#,
         #+1.5:15#,
         #+1.6:15#,
         #-13:10:30#,
         #-13:10:30#
      },
      "Date.ChangeHour"
   )
EndFunction



'------------------------------------------------
Function Test_ChangeMillisecond()
   
   Return UnitTest.AssertTrue(
      {
         Date.ChangeMillisecond(D1, 1) = #1/13/2023 12:00:00.001 AM#,
         D2.ChangeMillisecond(0.5) = #10 Jun 2022 12:00:00.001 AM#,
         Date.ChangeMillisecond(D3, 10) = Date.FromDateTime(
            Clock.Year,
            Clock.Month,
            Clock.Day,
            15, 0, 0, 10
         ),
         D4.ChangeMillisecond(1.5) = Date.FromDateTime(
            Clock.Year,
            Clock.Month,
            Clock.Day,
            6, 12, 00, 1.5
         ),
         Date.ChangeMillisecond(D5, -20) = #1-1-2023 12:20:15.020 PM#,
         Date.ChangeMillisecond(D6, 30) = #+1.5:15:0.03#,
         Date.ChangeMillisecond(D6, -30) = #+1.5:15:0.03#,
         D7.ChangeMillisecond(100) = #-5:10:30.100#,
         D7.ChangeMillisecond(-100) = #-5:10:30.100#
      },
      "Date.ChangeMillisecond"
   )
EndFunction

'------------------------------------------------
Function Test_ChangeMinute()
   
   Return UnitTest.AssertEqual(
      {
         Date.ChangeMinute(D1, 1),
         D2.ChangeMinute(.5),
         Date.ChangeMinute(D3, 10),
         D4.ChangeMinute(1.5),
         Date.ChangeMinute(D5, -20),
         Date.ChangeMinute(D6, 30),
         Date.ChangeMinute(D6, -30),
         D7.ChangeMinute(59),
         D7.ChangeMinute(-59)
      },
      {
         #1/13/2023 12:01:00 AM#,
         #10 Jun 2022 12:01:00 AM#,
         Date.FromDateTime(
            Clock.Year,
            Clock.Month,
            Clock.Day,
            15, 10, 0, 0
         ),
         Date.FromDateTime(
            Clock.Year,
            Clock.Month,
            Clock.Day,
            6, 2, 0, 0
         ),
         #1-1-2023 12:20:15 PM#,
         #+1.5:30:00#,
         #+1.5:30:00#,
         #-5:59:30#,
         #-5:59:30#
      },
      "Date.ChangeMinute"
   )
EndFunction


'------------------------------------------------
Function Test_ChangeMonth()
   
   Return UnitTest.AssertEqual(
      {
         Date.ChangeMonth(D1, 1),
         D2.ChangeMonth(0.5),
         Date.ChangeMonth(D3, 10),
         D4.ChangeMonth(1.5),
         Date.ChangeMonth(D5, -10),
         Date.ChangeMonth(D6, 30),
         D7.ChangeMonth(100)
      },
      {
         #1/13/2023#,
         #10 Jan 2022#,
         Date.FromDateTime(
            Clock.Year,
            10,
            Clock.Day,
            15, 0, 0, 0
         ),
         Date.FromDateTime(
            Clock.Year,
            2,
            Clock.Day,
            6, 12, 0, 0
         ),
         #10-1-2023 12:20:15 PM#,
         #+1.5:15#,
         #-5:10:30#
      },
      "Date.ChangeMonth"
   )
EndFunction

'------------------------------------------------
Function Test_ChangeSecond()
   
   Return UnitTest.AssertEqual(
      {
         Date.ChangeSecond(D1, 1),
         D2.ChangeSecond(.5),
         Date.ChangeSecond(D3, 10),
         D4.ChangeSecond(1.5),
         Date.ChangeSecond(D5, -20),
         Date.ChangeSecond(D6, 30),
         Date.ChangeSecond(D6, -30),
         D7.ChangeSecond(100),
         D7.ChangeSecond(-100)
      },
      {
         #1/13/2023 12:00:01 AM#,
         #10 Jun 2022 12:00:00.5 AM#,
         Date.FromDateTime(
            Clock.Year,
            Clock.Month,
            Clock.Day,
            15, 0, 10, 0
         ),
         Date.FromDateTime(
            Clock.Year,
            Clock.Month,
            Clock.Day,
            6, 12, 1, 500
         ),
         #1-1-2023 12:19:55 PM#,
         #+1.5:15:30#,
         #-5:8:50#
      },
      "Date.ChangeSecond"
   )
EndFunction


'------------------------------------------------
Function Test_ChangeYear()
   
   Return UnitTest.AssertEqual(
      {
         Date.ChangeYear(D1, 1),
         D2.ChangeYear(0.5),
         Date.ChangeYear(D3, 10),
         D4.ChangeYear(1.5),
         Date.ChangeYear(D5, -20),
         Date.ChangeYear(D6, 30),
         D7.ChangeYear(100)
      },
      {
         #1/13/2024#,
         #10 Jun 2023#,
         Date.FromDateTime(
            Clock.Year + 10,
            Clock.Month,
            Clock.Day,
            15, 0, 0, 0
         ),
         Date.FromDateTime(
            Clock.Year + 2,
            Clock.Month,
            Clock.Day,
            6, 12, 0, 0
         ),
         #1-1-2003 12:20:15 PM#,
         #+10958.17:15#,
         #+36524.18:49:30#
      },
      "Date.ChangeYear"
   )
EndFunction


