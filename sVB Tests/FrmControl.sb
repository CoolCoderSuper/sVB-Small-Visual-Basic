'Me.RunTests()


'------------------------------------------------
Function Test_Angle()
   angles[1] = Button1.Angle
   Button1.Angle = 45
   angles[2] = Button1.Angle
   Button1.Angle = -45
   angles[3] = Button1.Angle
   Button1.Angle = 400
   angles[4] = Button1.Angle
   
   angles[5] = CheckBox1.Angle + 10
   ComboBox1.Angle = ComboBox1.Angle - 121
   angles[6] = ComboBox1.Angle
   
   
   Return UnitTest.AssertEqual(
      angles,
      {0, 45, 315, 40, 344, 260},
      "Control.Angle"
   )
EndFunction


'------------------------------------------------
Function Test_BackColor()
   ListBox1.BackColor = Colors.Yellow
   results[1] = ListBox1.BackColor
   ListBox1.BackColor = "red"
   results[2] = ListBox1.BackColor
   ListBox1.BackColor = Color.FromARGB(128, 0, 255, 0)
   results[3] = ListBox1.BackColor
   ListBox1.BackColor = "#0000ff"
   results[4] = ListBox1.BackColor
   ListBox1.BackColor = Colors.None
   results[5] = ListBox1.BackColor
   
   Return UnitTest.AssertEqual(
      results,
      {"#FFFFFF00", "#FFFF0000", "#8000FF00", "#FF0000FF", "None"},
      "Control.BackColor"
   )
EndFunction


'------------------------------------------------
Function Test_Enabled()
   Me.Enabled = False
   x = Me.Enabled
   Me.Enabled = True
   
   Return UnitTest.AssertEqual(
      {x, Me.Enabled},
      {False, True},
      "Control.Enabled"
   )
EndFunction


'------------------------------------------------
Function Test_Error()
   ComboBox1.Error = "test"
   results[1] = {ComboBox1.Error, ComboBox1.ToolTip}
   ComboBox1.ToolTip = "Hi"
   results[2] = {ComboBox1.Error, ComboBox1.ToolTip}
   ComboBox1.Error = ""
   results[3] = {ComboBox1.Error, ComboBox1.ToolTip}
   ComboBox1.ToolTip = ""
   results[4] = {ComboBox1.Error, ComboBox1.ToolTip}
   
   
   Return UnitTest.AssertEqual(
      results,
      {
         {"test", ""},
         {"test", "Hi"},
         {"", "Hi"},
         {"", ""}
      },
      "Control.Error"
   )
EndFunction


'------------------------------------------------
Function Test_FitContent()
   Label1.FitContentSize()
   w = Label1.Width
   h = Label1.Height
   
   Label1.Text = "This is a test"
   results[1] = Label1.Width = w And Label1.Height = h
   
   Label1.FitContentHeight()
   results[2] = Label1.Width = w And Label1.Height > h
   
   Label1.FitContentWidth()
   results[3] = Label1.Width > w And Label1.Height > h
   
   Label1.FitContentSize()
   results[4] = {Label1.Width > w, Label1.Height = h}
   
   Label1.Text = "test"
   results[5] = {Label1.Width > w, Label1.Height = h}
   
   Label1.FitContentSize()
   results[6] = {Label1.Width < w, Label1.Height = h}
   
   Return UnitTest.AssertEqual(
      results,
      {
         True, True, True,
         {True, True},
         {True, True},
         {True, True}
      },
      "Control.FitContent"
   )
EndFunction


'------------------------------------------------
Function Test_Font()
   font!Name = Me.FontName
   font!Size = 20
   font!Bold = True
   
   Label1.Underlined = True
   Label1.Font = font
   
   font2!Name = Me.FontName
   font2!Size = 20
   font2!Bold = True
   font2!Italic = False
   font2!Underlined = True
   font2!Color = Colors.Black
   
   font = Label1.Font
   Label1.Font = {}
   
   Return UnitTest.AssertEqual(
      {font, Label1.Font},
      {font2, font2},
      "Control.Font"
   )
EndFunction


'------------------------------------------------
Function Test_FontName()
   TextBox1.FontName = ""
   results[1] = TextBox1.FontName
   TextBox1.FontName = "test"
   results[2] = TextBox1.FontName
   TextBox1.FontName = "Times New Roman"
   results[3] = TextBox1.FontName
   
   Return UnitTest.AssertEqual(
      results,
      {"", "test", "Times New Roman"},
      "Control.FontName"
   )
EndFunction

'------------------------------------------------
Function Test_FontSize()
   fontSize = TextBox1.FontSize
   TextBox1.FontSize = -1
   results[1] = TextBox1.FontSize
   TextBox1.FontSize = 0
   results[2] = TextBox1.FontSize
   TextBox1.FontSize = 0.5
   results[3] = TextBox1.FontSize
   TextBox1.FontSize = 1
   results[4] = TextBox1.FontSize
   TextBox1.FontSize = 15
   results[5] = TextBox1.FontSize
   TextBox1.FontSize = 20.5
   results[6] = TextBox1.FontSize
   TextBox1.FontSize = 100
   results[7] = TextBox1.FontSize
   TextBox1.FontSize = 150
   results[8] = TextBox1.FontSize
   
   Return UnitTest.AssertEqual(
      results,
      {fontSize, fontSize, 0.5, 1, 15, 20.5, 100, 150},
      "Control.FontName"
   )
EndFunction


'------------------------------------------------
Function Test_FontBold()
   Button1.FontBold = False
   results[1] = Button1.FontBold
   Button1.FontBold = True
   results[2] = Button1.FontBold
   
   
   Return UnitTest.AssertEqual(
      results,
      {False, True},
      "Control.FontBold"
   )
EndFunction


'------------------------------------------------
Function Test_FontItalic()
   Button1.FontItalic = False
   results[1] = Button1.FontItalic
   Button1.FontItalic = True
   results[2] = Button1.FontItalic
   
   
   Return UnitTest.AssertEqual(
      results,
      {False, True},
      "Control.FontItalic"
   )
EndFunction


'------------------------------------------------
Function Test_ForeColor()
   RadioButton1.ForeColor = Colors.Yellow
   results[1] = RadioButton1.ForeColor
   RadioButton1.ForeColor = "red"
   results[2] = RadioButton1.ForeColor
   RadioButton1.ForeColor = Color.FromARGB(128, 0, 255, 0)
   results[3] = RadioButton1.ForeColor
   RadioButton1.ForeColor = "#0000ff"
   results[4] = RadioButton1.ForeColor
   RadioButton1.ForeColor = Colors.None
   results[5] = RadioButton1.ForeColor
   
   Return UnitTest.AssertEqual(
      results,
      {"#FFFFFF00", "#FFFF0000", "#8000FF00", "#FF0000FF", "None"},
      "Control.ForeColor"
   )
EndFunction
